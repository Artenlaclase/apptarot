---
// src/pages/cards/minor.astro
import { db } from '../../lib/firebase';
import { collection, getDocs, query, orderBy, where } from 'firebase/firestore';
import Layout from '../../layouts/Layout.astro';
import '../../styles/cards.css';

interface FirestoreCard {
  id: string;
  nombre?: string;
  palo?: string;
  valor?: string;
  imagem?: string | null;
  imagen?: string | null;
}

// Definir el orden correcto de los valores
const valorOrder = ['as', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'sota', 'caballo','reina','rey'];

// Función para obtener el índice de orden del valor
const getValorOrderIndex = (valor: string): number => {
  const normalizedValor = valor.toLowerCase().trim();
  const index = valorOrder.indexOf(normalizedValor);
  return index === -1 ? 999 : index; // Si no encuentra el valor, lo pone al final
};

// Query básica sin filtros complejos mientras se construye el índice
const q = collection(db, 'cards');

const querySnapshot = await getDocs(q);

const processImageUrl = (url: string | undefined | null): string => {
  if (!url || typeof url !== 'string') return '/placeholder-card.jpg';
  const cleanedUrl = url.trim();
  
  if (cleanedUrl.startsWith('https://firebasestorage.googleapis.com')) {
    return cleanedUrl.includes('alt=media')
      ? cleanedUrl
      : `${cleanedUrl}${cleanedUrl.includes('?') ? '&' : '?'}alt=media`;
  }
  
  if (cleanedUrl.includes('res.cloudinary.com') && !cleanedUrl.includes('upload/w_')) {
    return cleanedUrl.replace('upload/', 'upload/w_300,f_auto,q_auto/');
  }
  
  return cleanedUrl;
};

const cards = querySnapshot.docs
  .map(doc => {
    const data = doc.data();
    const imageUrl = data.imagem || data.imagen;
    
    return {
      id: doc.id,
      nombre: data.nombre || 'Sin nombre',
      palo: data.palo || 'Sin palo',
      valor: data.valor || 'N/A',
      arcano: data.arcano || '',
      imagem: processImageUrl(imageUrl)
    };
  })
  .filter(card => card.arcano === 'menor'); // Filtrar solo arcanos menores

// Agrupar cartas por palo
const cardsBySuit = cards.reduce((acc, card) => {
  if (!acc[card.palo]) {
    acc[card.palo] = [];
  }
  acc[card.palo].push(card);
  return acc;
}, {} as Record<string, typeof cards>);

// Ordenar las cartas dentro de cada palo por valor
Object.keys(cardsBySuit).forEach(suit => {
  cardsBySuit[suit].sort((a, b) => {
    const orderA = getValorOrderIndex(a.valor);
    const orderB = getValorOrderIndex(b.valor);
    return orderA - orderB;
  });
});

// Ordenar los palos en un orden específico
const suitOrder = ['bastos', 'copas', 'espadas', 'oros'];
const orderedSuits = suitOrder.filter(suit => cardsBySuit[suit] && cardsBySuit[suit].length > 0);

const pageTitle = "Arcanos Menores del Tarot de Marsella";
const pageDescription = "Explora los cuatro palos de los arcanos menores: Bastos, Copas, Espadas y Oros";
---

<Layout title={pageTitle} description={pageDescription}>
  <style>
    .cartas-grid-minor {
      display: grid;
      grid-template-columns: repeat(5, 1fr);
      gap: 1.5rem;
      margin-bottom: 2rem;
    }
    
    .carta-link-minor {
      text-decoration: none;
      color: inherit;
      transition: transform 0.2s ease;
    }
    
    .carta-link-minor:hover {
      transform: translateY(-5px);
    }
    
    .carta-item-minor {
      background: white;
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      overflow: hidden;
      transition: box-shadow 0.2s ease;
    }
    
    .carta-item-minor:hover {
      box-shadow: 0 4px 16px rgba(0,0,0,0.15);
    }
    
    .carta-image-container-minor {
      aspect-ratio: 2/3;
      overflow: hidden;
    }
    
    .carta-image-minor {
      width: 100%;
      height: 100%;
      object-fit: contain;
      background-color: #f8f9fa;
    }
    
    .carta-info-minor {
      padding: 0.75rem;
      text-align: center;
    }
    
    .carta-nombre-minor {
      font-size: 0.9rem;
      font-weight: 600;
      margin: 0 0 0.25rem 0;
      color: #1f2937;
    }
    
    .carta-valor-minor {
      font-size: 0.8rem;
      color: #6b7280;
    }
    
    @media (max-width: 768px) {
      .cartas-grid-minor {
        grid-template-columns: repeat(3, 1fr);
        gap: 0.75rem;
      }
    }
    
    @media (max-width: 480px) {
      .cartas-grid-minor {
        grid-template-columns: repeat(2, 1fr);
        gap: 0.5rem;
      }
    }
  </style>
  
  <main class="container mx-auto px-4 py-8 max-w-7xl">
    <header class="text-center mb-12">
      <h1 class="text-4xl font-bold text-purple-900 mb-2">{pageTitle}</h1>
      <p class="text-xl text-purple-700">Los cuatro palos: Bastos, Copas, Espadas y Oros</p>
    </header>

    <!-- Sección por cada palo -->
    {orderedSuits.map(suit => (
      <section class="mb-16">
        <h2 class="text-3xl font-semibold text-purple-800 mb-6 capitalize border-b-2 border-purple-200 pb-2">
          {suit === 'bastos' && 'Bastos - El elemento Fuego'}
          {suit === 'copas' && 'Copas - El elemento Agua'}
          {suit === 'espadas' && 'Espadas - El elemento Aire'}
          {suit === 'oros' && 'Oros - El elemento Tierra'}
        </h2>

        <!-- Grid para las cartas del palo -->
        <div class="cartas-grid-minor">
          {cardsBySuit[suit].map(card => (
            <a
              href={`/cards/${card.id}`}
              class="carta-link-minor"
            >
              <article class="carta-item-minor">
                <div class="carta-image-container-minor">
                  <img
                    src={card.imagem}
                    alt={`Carta ${card.nombre}`}
                    loading="lazy"
                    decoding="async"
                    class="carta-image-minor"
                    onerror="this.src='/placeholder-card.jpg';this.classList.add('error-image')"
                  />
                </div>
                <div class="carta-info-minor">
                  <h3 class="carta-nombre-minor">{card.nombre}</h3>
                  <span class="carta-valor-minor capitalize">{card.valor}</span>
                </div>
              </article>
            </a>
          ))}
        </div>
      </section>
    ))}
  </main>
</Layout>