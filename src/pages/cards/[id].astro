---
// src/pages/cards/[id].astro
import { db } from '../../lib/firebase';
import { doc, getDoc } from 'firebase/firestore';
import Layout from '../../layouts/Layout.astro';

const { id } = Astro.params as { id: string };
const docRef = doc(db, 'cards', id);
const docSnap = await getDoc(docRef);

interface Card {
  id: string;
  nombre: string;
  numero: number;
  arcano: 'mayor' | 'menor';
  imagem: string;
  imagen?: string;
  significado: {
    directo: string;
    invertido: string;
  };
  simbolos: {
    principales: string[];
    interpretacion: string;
  };
  keywords?: string[];
}

const docData = docSnap.data();
if (!docData) {
  return Response.redirect('/404', 404);
}

const processImageUrl = (url: string | undefined | null): string => {
  if (!url || typeof url !== 'string') return '/placeholder-card.jpg';
  
  const cleanedUrl = url.trim();
  
  if (cleanedUrl.startsWith('https://firebasestorage.googleapis.com')) {
    return cleanedUrl.includes('alt=media') 
      ? cleanedUrl 
      : `${cleanedUrl}${cleanedUrl.includes('?') ? '&' : '?'}alt=media`;
  }
  
  if (cleanedUrl.includes('res.cloudinary.com') && !cleanedUrl.includes('upload/w_')) {
    return cleanedUrl.replace('upload/', 'upload/w_600,f_auto,q_auto/');
  }
  
  return cleanedUrl;
};

const card: Card = {
  id: docSnap.id,
  nombre: docData.nombre || 'Sin nombre',
  numero: docData.numero || 0,
  arcano: docData.arcano || 'mayor',
  imagem: processImageUrl(docData.imagem || docData.imagen),
  significado: {
    directo: docData.significado?.directo || 'No disponible',
    invertido: docData.significado?.invertido || 'No disponible'
  },
  simbolos: {
    principales: docData.simbolos?.principales || [],
    interpretacion: docData.simbolos?.interpretacion || 'No disponible'
  },
  keywords: docData.keywords || []
};

const pageTitle = `${card.nombre} - Tarot de Marsella`;
const pageDescription = `Significado de ${card.nombre}: ${card.significado.directo.substring(0, 100)}...`;
---

<Layout title={pageTitle} description={pageDescription}>
  <article class="max-w-7xl mx-auto px-4 py-8">
    <header class="text-center border-b border-gray-200 pb-6 mb-8">
      <h1 class="text-4xl font-bold text-purple-900">
        {card.nombre} <span class="text-gray-500 text-2xl">#{card.numero}</span>
      </h1>
      <p class="italic text-purple-600 mt-2">
        {card.arcano === 'mayor' ? 'Arcano Mayor' : 'Arcano Menor'}
      </p>
    </header>

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
      <!-- Contenedor de imagen optimizado -->
      <div class="carta-detalle-container">
        <figure class="carta-detalle-figure">
          <div class="carta-detalle-image-wrapper">
            <img
              src={card.imagem}
              alt={`Carta ${card.nombre}`}
              loading="eager"
              class="carta-detalle-image"
              onerror="this.src='/placeholder-card.jpg';this.classList.add('error-image')"
            />
          </div>
          <figcaption class="text-center text-sm text-gray-500 mt-3">
            Ilustraci√≥n tradicional de Marsella
          </figcaption>
        </figure>
      </div>

      <div class="lg:col-span-2 space-y-8">
        <section class="space-y-6">
          <h2 class="text-2xl font-semibold text-purple-800 border-b pb-2">
            Interpretaci√≥n
          </h2>
          
          <div class="bg-purple-50 p-5 rounded-lg">
            <h3 class="text-xl font-medium text-purple-700 flex items-center gap-2">
              <span>üìå</span> Directo:
            </h3>
            <p class="mt-2 text-gray-700">{card.significado.directo}</p>
          </div>

          <div class="bg-gray-50 p-5 rounded-lg">
            <h3 class="text-xl font-medium text-gray-700 flex items-center gap-2">
              <span>üîÅ</span> Invertido:
            </h3>
            <p class="mt-2 text-gray-700">{card.significado.invertido}</p>
          </div>
        </section>

        <section class="space-y-4">
          <h2 class="text-2xl font-semibold text-purple-800 border-b pb-2">
            üîç S√≠mbolos Clave
          </h2>
          
          {card.simbolos.principales.length > 0 ? (
            <ul class="columns-2 gap-4">
              {card.simbolos.principales.map((symbol) => (
                <li class="mb-2 flex items-center">
                  <span class="w-2 h-2 bg-purple-500 rounded-full mr-2"></span>
                  {symbol}
                </li>
              ))}
            </ul>
          ) : (
            <p class="text-gray-500 italic">No hay s√≠mbolos principales registrados</p>
          )}
          
          <div class="mt-4">
            <h3 class="text-lg font-medium text-purple-700">
              Interpretaci√≥n simb√≥lica:
            </h3>
            <p class="mt-2 text-gray-700">{card.simbolos.interpretacion}</p>
          </div>
        </section>

        {card.keywords && card.keywords.length > 0 && (
          <section>
            <h2 class="text-2xl font-semibold text-purple-800 border-b pb-2">
              üìå Keywords
            </h2>
            <div class="flex flex-wrap gap-2 mt-4">
              {card.keywords.map((keyword) => (
                <span class="bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-sm">
                  {keyword}
                </span>
              ))}
            </div>
          </section>
        )}
      </div>
    </div>

    <footer class="mt-12 text-center">
      <a 
        href="/cards" 
        class="inline-block bg-purple-100 hover:bg-purple-200 text-purple-800 px-6 py-2 rounded-lg transition-colors"
      >
        ‚Üê Volver al mazo completo
      </a>
    </footer>
  </article>
</Layout>

<style>
  /* Contenedor principal de la carta en detalle */
  .carta-detalle-container {
    position: sticky;
    top: 1rem;
    height: fit-content;
  }

  .carta-detalle-figure {
    width: 100%;
    max-width: 400px;
    margin: 0 auto;
  }

  /* Wrapper para controlar el aspecto de la imagen */
  .carta-detalle-image-wrapper {
    position: relative;
    width: 100%;
    background: #f8f9fa;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 10px 25px -3px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 500px;
  }

  .carta-detalle-image-wrapper:hover {
    transform: translateY(-4px);
    box-shadow: 0 20px 40px -5px rgba(0, 0, 0, 0.15);
  }

  /* Imagen principal - SE VE COMPLETA */
  .carta-detalle-image {
    width: 100%;
    height: auto;
    max-height: 600px;
    object-fit: contain; /* CLAVE: contain para ver toda la imagen */
    object-position: center;
    transition: transform 0.3s ease;
    border-radius: 12px;
  }

  .carta-detalle-image-wrapper:hover .carta-detalle-image {
    transform: scale(1.02);
  }

  /* Imagen de error */
  .error-image {
    background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 400px;
  }

  /* Responsive Design */
  @media (max-width: 1024px) {
    .carta-detalle-container {
      position: static;
      margin-bottom: 2rem;
    }

    .carta-detalle-image-wrapper {
      min-height: 450px;
    }

    .carta-detalle-image {
      max-height: 500px;
    }
  }

  @media (max-width: 768px) {
    .carta-detalle-figure {
      max-width: 350px;
    }

    .carta-detalle-image-wrapper {
      min-height: 400px;
    }

    .carta-detalle-image {
      max-height: 450px;
    }
  }

  @media (max-width: 480px) {
    .carta-detalle-figure {
      max-width: 300px;
    }

    .carta-detalle-image-wrapper {
      min-height: 350px;
      border-radius: 8px;
    }

    .carta-detalle-image {
      max-height: 400px;
      border-radius: 8px;
    }
  }

  @media (max-width: 320px) {
    .carta-detalle-figure {
      max-width: 100%;
    }

    .carta-detalle-image-wrapper {
      min-height: 300px;
    }

    .carta-detalle-image {
      max-height: 350px;
    }
  }

  /* Mejoras adicionales para el contenido */
  .columns-2 {
    column-count: 2;
    column-gap: 1rem;
  }

  @media (max-width: 640px) {
    .columns-2 {
      column-count: 1;
    }
  }
</style>